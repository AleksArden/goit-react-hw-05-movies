{"version":3,"file":"static/js/305.8ae04ce2.chunk.js","mappings":"2QACaA,EAAOC,EAAAA,GAAAA,KAAH,qEAIJC,EAAQD,EAAAA,GAAAA,MAAH,yC,kBCmDlB,EAnDmB,WACjB,OAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAaL,EAAaM,IAAI,SAC9BC,GAAWC,EAAAA,EAAAA,OASjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,GACc,KAAfA,EAAJ,CACA,IAAMK,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAkBN,GADrB,OACVO,EADU,OAEhBC,EAAUD,GAFM,2CAAH,qDAIfF,GAL6B,CAM9B,GAAE,CAACL,IAEJ,IAAMQ,EAAY,SAAAD,GAChB,IAAME,EAAaF,EAAKG,KAAI,kBAA6B,CACvDC,GAD0B,EAAGA,GAE7BC,MAF0B,EAAOC,eAAP,IAI5Bd,EAAUU,EACX,EAED,OACE,4BACE,UAAClB,EAAD,CAAMuB,SA3BW,SAAAC,GACnBA,EAAIC,iBACJ,IAAQC,EAAUF,EAAIG,OAAOC,SAASC,OAA9BH,MAERlB,EAAU,IACVH,EAAgB,CAAEyB,MAAOJ,GAC1B,EAqBG,WACE,SAACxB,EAAD,CAAO6B,KAAK,OAAOC,aAAa,MAAMC,KAAK,YAC3C,mBAAQF,KAAK,SAAb,wBAGF,wBACGxB,GACCA,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMa,GAAE,UAAKd,GAAMe,MAAO,CAAEC,KAAMzB,GAAlC,SACGU,KAFID,EADA,QAUpB,C","sources":["pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const Form = styled.form`\n  padding-left: 24px;\n  padding-top: 24px;\n`;\nexport const Input = styled.input`\n  width: 300px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Form, Input } from './MoviesPage.styled';\nimport { fetchSearchMovies } from 'services/Movies.services';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const searchName = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const { value } = evt.target.elements.search;\n\n    setMovies([]);\n    setSearchParams({ query: value });\n  };\n  useEffect(() => {\n    if (!searchName) return;\n    if (searchName === '') return;\n    const getMovies = async () => {\n      const data = await fetchSearchMovies(searchName);\n      onResolve(data);\n    };\n    getMovies();\n  }, [searchName]);\n\n  const onResolve = data => {\n    const moviesName = data.map(({ id, original_title }) => ({\n      id,\n      title: original_title,\n    }));\n    setMovies(moviesName);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" autoComplete=\"off\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n\n      <ul>\n        {movies &&\n          movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\nexport default MoviesPage;\n"],"names":["Form","styled","Input","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","searchName","get","location","useLocation","useEffect","getMovies","fetchSearchMovies","data","onResolve","moviesName","map","id","title","original_title","onSubmit","evt","preventDefault","value","target","elements","search","query","type","autoComplete","name","to","state","from"],"sourceRoot":""}