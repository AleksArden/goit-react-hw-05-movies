{"version":3,"file":"static/js/757.20c9445e.chunk.js","mappings":"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","sources":["constans/ImageURL.js","constans/Status.js","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/Movies.services.js"],"sourcesContent":["\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';","export const STATUS = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n}","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-left: 24px;\n  margin-top: 24px;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 16px 24px;\n`;\nexport const Poster = styled.img`\n  width: 250px;\n  min-height: 375px;\n  object-fit: cover;\n`;\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 24px 16px;\n`;\n\nexport const Thumb = styled.div`\n  padding: 16px 24px;\n  border-top: 2px solid black;\n  border-bottom: 2px solid black;\n`;\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Item = styled.li`\n  padding: 4px;\n`;\nexport const Error = styled.h2`\n  margin-left: 24px;\n  margin-top: 24px;\n`;\nexport const Load = styled.p`\n  margin-left: 24px;\n  margin-top: 24px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchMovieDetailsById } from 'services/Movies.services';\nimport {\n  Wrapper,\n  Poster,\n  Content,\n  Thumb,\n  Button,\n  List,\n  Item,\n  Error,\n  Load,\n} from './MovieDetailsPage.styled';\nimport { IMAGE_URL } from 'constans/ImageURL';\nimport { STATUS } from 'constans/Status';\nimport imageReplace from 'assets/poster/poster-not-found.jpg';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovie = async query => {\n      setStatus(STATUS.loading);\n      try {\n        const data = await fetchMovieDetailsById(query);\n        onResolve(data);\n      } catch (error) {\n        console.log(error);\n        setStatus(STATUS.error);\n      }\n    };\n    getMovie(movieId);\n  }, [movieId]);\n  const onResolve = data => {\n    const dataMovie = {\n      title: data.original_title,\n      releaseDate: new Date(data.release_date).getFullYear(),\n      overview: data.overview,\n      genres: data.genres.map(item => item.name).join(' '),\n      poster: data.poster_path,\n      voteAverage: (data.vote_average * 10).toFixed(0),\n    };\n    setMovie(dataMovie);\n    setStatus(STATUS.success);\n  };\n  return (\n    <>\n      {status === STATUS.error && <Error>NOT FOUND</Error>}\n      {status === STATUS.loading && <Load>Loading...</Load>}\n      {status === STATUS.success && movie && (\n        <>\n          <Button type=\"button\" onClick={() => navigate(location?.state?.from)}>\n            Go back\n          </Button>\n          <Wrapper>\n            {movie.poster ? (\n              <Poster\n                src={`${IMAGE_URL}` + movie.poster}\n                alt={`Poster ${movie.title}`}\n              />\n            ) : (\n              <Poster src={imageReplace} />\n            )}\n            <Content>\n              {movie.releaseDate ? (\n                <h2>\n                  {movie.title} ({movie.releaseDate})\n                </h2>\n              ) : (\n                <h2>{movie.title}</h2>\n              )}\n              <p>User score {movie.voteAverage}%</p>\n              <b>Overview</b>\n              {movie.overview ? (\n                <p>{movie.overview}</p>\n              ) : (\n                <p>Not information</p>\n              )}\n              <b>Genres</b>\n              {movie.genres ? <p>{movie.genres}</p> : <p>Not information</p>}\n            </Content>\n          </Wrapper>\n          <Thumb>\n            <p>Additional information</p>\n            <List>\n              <Item>\n                <Link to=\"cast\" state={location.state}>\n                  Cast\n                </Link>\n              </Item>\n              <Item>\n                <Link to=\"reviews\" state={location.state}>\n                  Reviews\n                </Link>\n              </Item>\n            </List>\n          </Thumb>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst moviesApi = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n});\nconst ApiKey = '51cea464d1158e7d34cacf903de39a42';\n\nexport const fetchTrendingMovies = async () => {\n    const {\n        data: { results },\n    } = await moviesApi.get(`trending/movie/day`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return results;\n};\n\nexport const fetchSearchMovies = async searchName => {\n    const {\n        data: { results },\n    } = await moviesApi.get(`search/movie`, {\n        params: {\n            api_key: ApiKey,\n            query: searchName,\n        },\n    });\n    return results;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n    const { data } = await moviesApi.get(`movie/${movieId}`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return data;\n};\n\nexport const fetchCastById = async movieId => {\n    const {\n        data: { cast },\n    } = await moviesApi.get(`movie/${movieId}/credits`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return cast;\n};\n\nexport const fetchReviewsById = async movieId => {\n    const {\n        data: { results },\n    } = await moviesApi.get(`movie/${movieId}/reviews`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return results;\n};\n"],"names":["IMAGE_URL","STATUS","idle","loading","success","error","Button","styled","Wrapper","Poster","Content","Thumb","List","Item","Error","Load","useState","movie","setMovie","status","setStatus","navigate","useNavigate","location","useLocation","movieId","useParams","useEffect","getMovie","query","fetchMovieDetailsById","data","onResolve","console","log","dataMovie","title","original_title","releaseDate","Date","release_date","getFullYear","overview","genres","map","item","name","join","poster","poster_path","voteAverage","vote_average","toFixed","type","onClick","state","from","src","alt","imageReplace","to","Suspense","fallback","moviesApi","axios","baseURL","ApiKey","fetchTrendingMovies","get","params","api_key","results","fetchSearchMovies","searchName","fetchCastById","cast","fetchReviewsById"],"sourceRoot":""}