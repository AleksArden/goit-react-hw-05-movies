{"version":3,"file":"static/js/387.302ef883.chunk.js","mappings":"kSAEaA,EAAUC,EAAAA,GAAAA,IAAH,+CAGPC,EAAOD,EAAAA,GAAAA,GAAH,6CAGJE,EAAOF,EAAAA,GAAAA,GAAH,+EAKJG,EAAUH,EAAAA,GAAAA,EAAH,4C,SCyCpB,EAhDgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMC,GAAN,8EACjBL,EAAUF,EAAAA,EAAAA,SADO,mBAGIQ,EAAAA,EAAAA,IAAiBD,GAHrB,OAGTE,EAHS,OAIfC,EAAUD,GAJK,gDAMfE,QAAQC,IAAR,MACAV,EAAUF,EAAAA,EAAAA,OAPK,yDAAH,sDAUhBM,EAAWH,EACZ,GAAE,CAACA,IACJ,IAAMO,EAAY,SAAAD,GAChB,IAAMI,EAAcJ,EAAKK,KAAI,kBAA8B,CACzDC,GAD2B,EAAGA,GAE9BC,OAF2B,EAAOA,OAGlCC,QAH2B,EAAeA,QAAf,IAK7BlB,EAAWc,GACXX,EAAUF,EAAAA,EAAAA,QACX,EAED,OACE,UAACR,EAAD,WACGS,IAAWD,EAAAA,EAAAA,QAAgB,sCAC3BC,IAAWD,EAAAA,EAAAA,UAAkB,sCAC7BC,IAAWD,EAAAA,EAAAA,SAAqC,IAAnBF,EAAQoB,QACpC,qEAEA,SAACxB,EAAD,UACGI,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACtB,EAAD,YACE,uBAAIqB,KACJ,SAACpB,EAAD,UAAUqB,MAFDF,EADA,QAUtB,C,uDCrDM,IAAMf,EAAS,CAClBmB,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q,yLCFLC,E,QAAYC,EAAAA,OAAa,CAC3BC,QAAS,kCAEPC,EAAS,mCAEFC,EAAmB,mCAAG,sGAGrBJ,EAAUK,IAAV,qBAAoC,CAC1CC,OAAQ,CACJC,QAASJ,KALc,uBAEnBK,EAFmB,EAE3BtB,KAAQsB,QAFmB,kBAQxBA,GARwB,2CAAH,qDAWnBC,EAAiB,mCAAG,WAAMC,GAAN,yFAGnBV,EAAUK,IAAV,eAA8B,CACpCC,OAAQ,CACJC,QAASJ,EACTnB,MAAO0B,KANc,uBAEjBF,EAFiB,EAEzBtB,KAAQsB,QAFiB,kBAStBA,GATsB,2CAAH,sDAYjBG,EAAqB,mCAAG,WAAM/B,GAAN,yFACVoB,EAAUK,IAAV,gBAAuBzB,GAAW,CACrD0B,OAAQ,CACJC,QAASJ,KAHgB,uBACzBjB,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,sDASrB0B,EAAa,mCAAG,WAAMhC,GAAN,yFAGfoB,EAAUK,IAAV,gBAAuBzB,EAAvB,YAA0C,CAChD0B,OAAQ,CACJC,QAASJ,KALQ,uBAEbU,EAFa,EAErB3B,KAAQ2B,KAFa,kBAQlBA,GARkB,2CAAH,sDAWb5B,EAAgB,mCAAG,WAAML,GAAN,yFAGlBoB,EAAUK,IAAV,gBAAuBzB,EAAvB,YAA0C,CAChD0B,OAAQ,CACJC,QAASJ,KALW,uBAEhBK,EAFgB,EAExBtB,KAAQsB,QAFgB,kBAQrBA,GARqB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","constans/Status.js","services/Movies.services.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 16px 24px;\n`;\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\nexport const Content = styled.p`\n  margin-top: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'services/Movies.services';\nimport { STATUS } from 'constans/Status';\nimport { Wrapper, Item, List, Content } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async query => {\n      setStatus(STATUS.loading);\n      try {\n        const data = await fetchReviewsById(query);\n        onResolve(data);\n      } catch (error) {\n        console.log(error);\n        setStatus(STATUS.error);\n      }\n    };\n    getReviews(movieId);\n  }, [movieId]);\n  const onResolve = data => {\n    const dataReviews = data.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n    setReviews(dataReviews);\n    setStatus(STATUS.success);\n  };\n\n  return (\n    <Wrapper>\n      {status === STATUS.error && <h2>NOT FOUND</h2>}\n      {status === STATUS.loading && <p>Loading...</p>}\n      {status === STATUS.success && reviews.length === 0 ? (\n        <p>We don`t have any reviews for this movie</p>\n      ) : (\n        <List>\n          {reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <b>{author}</b>\n              <Content>{content}</Content>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Wrapper>\n  );\n};\nexport default Reviews;\n","export const STATUS = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n}","import axios from 'axios';\n\nconst moviesApi = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n});\nconst ApiKey = '51cea464d1158e7d34cacf903de39a42';\n\nexport const fetchTrendingMovies = async () => {\n    const {\n        data: { results },\n    } = await moviesApi.get(`trending/movie/day`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return results;\n};\n\nexport const fetchSearchMovies = async searchName => {\n    const {\n        data: { results },\n    } = await moviesApi.get(`search/movie`, {\n        params: {\n            api_key: ApiKey,\n            query: searchName,\n        },\n    });\n    return results;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n    const { data } = await moviesApi.get(`movie/${movieId}`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return data;\n};\n\nexport const fetchCastById = async movieId => {\n    const {\n        data: { cast },\n    } = await moviesApi.get(`movie/${movieId}/credits`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return cast;\n};\n\nexport const fetchReviewsById = async movieId => {\n    const {\n        data: { results },\n    } = await moviesApi.get(`movie/${movieId}/reviews`, {\n        params: {\n            api_key: ApiKey,\n        },\n    });\n    return results;\n};\n"],"names":["Wrapper","styled","List","Item","Content","useState","reviews","setReviews","STATUS","status","setStatus","movieId","useParams","useEffect","getReviews","query","fetchReviewsById","data","onResolve","console","log","dataReviews","map","id","author","content","length","idle","loading","success","error","moviesApi","axios","baseURL","ApiKey","fetchTrendingMovies","get","params","api_key","results","fetchSearchMovies","searchName","fetchMovieDetailsById","fetchCastById","cast"],"sourceRoot":""}